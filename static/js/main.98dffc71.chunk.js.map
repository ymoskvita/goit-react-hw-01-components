{"version":3,"sources":["components/Profile/Profile.styled.js","components/Profile/Profile.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/FriendList/FriendList.styled.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Section","styled","section","Wrapper","div","Avatar","img","Username","p","Tag","StatsList","ul","StatsItem","li","Label","span","Quantity","Profile","avatar","username","tag","location","stats","src","alt","followers","views","likes","Title","h2","Percentage","Statistics","title","map","stat","style","backgroundColor","Math","random","toString","label","percentage","id","List","Item","Status","props","itemprop","Name","FriendList","friends","friend","isOnline","width","name","Table","table","TableHead","thead","TableHeadCaption","th","Row","tr","Cell","td","TransactionHistory","items","item","type","amount","currency","App","user","data","transactions","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.98dffc71.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Section = styled.section`\n    width: 300px;\n    border: 1px solid #DCDCDC;\n    margin: 50px auto 0;\n`;\nexport const Wrapper = styled.div`\n    padding-bottom: 20px;\n\n`;\nexport const Avatar = styled.img`\n    display: block;\n    width: 150px;\n    border-radius: 50%;\n    margin: 0 auto;\n    padding-top: 35px;\n`;\nexport const Username = styled.p`\n    font-size: 24px;\n    text-align: center;\n    margin: 15px;\n`;\nexport const Tag = styled.p`\n    font-size: 16px;\n    text-align: center;\n    color: #686461;\n    margin: 10px;\n`;\n\nexport const StatsList = styled.ul`\n    display: flex;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n`;\nexport const StatsItem = styled.li`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 15px;\n    padding-bottom: 20px;\n    background-color: #F0F8FF;\n    border: 1px solid #DCDCDC;\n`;\nexport const Label = styled.span`\n    color: #686461;\n`;\nexport const Quantity = styled.span`\n    font-size: 16px;\n`;","import PropTypes from 'prop-types';\nimport { Section, Wrapper, StatsList, StatsItem, Avatar, Username, Tag, Label, Quantity } from './Profile.styled';\n\nconst Profile = ({ avatar, username, tag, location, stats }) => {\n  return (\n    <Section>\n      <Wrapper>\n        <Avatar\n          src={avatar}\n          alt=\"User avatar\"\n        />\n        <Username>{username}</Username>\n        <Tag>@{tag}</Tag>\n        <Tag>{location}</Tag>\n      </Wrapper>\n      <StatsList>\n        <StatsItem>\n          <Label>Followers</Label>\n          <Quantity>{stats.followers}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Views</Label>\n          <Quantity>{stats.views}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Likes</Label>\n          <Quantity>{stats.likes}</Quantity>\n        </StatsItem>\n      </StatsList>\n    </Section>);\n};\n\nProfile.propTypes = {\n  username: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stat: PropTypes.objectOf(PropTypes.number)\n}\n\nexport default Profile;","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n    width: 375px;\n    border: 1px solid #DCDCDC;\n    margin: 50px auto 0;\n`;\nexport const Title = styled.h2`\n    padding-top: 30px;\n    padding-bottom: 30px;\n    margin: 0;\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: normal;\n`;\nexport const StatsList = styled.ul`\n    display: flex;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n`;\nexport const StatsItem = styled.li`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 10px;\n    padding-bottom: 15px;\n`;\nexport const Label = styled.span`\n    color:#ffffff;\n`;\nexport const Percentage = styled.span`\n    font-size: 22px;\n    margin-top: 5px;\n    color: #ffffff;\n`;","import PropTypes from \"prop-types\";\nimport { Section, Title, StatsList, StatsItem, Label, Percentage } from \"./Statistics.styled\";\n\nconst Statistics = ({ title, stats }) => {\n    return (\n    <Section>\n        {title && <Title>{title}</Title>}\n\n        <StatsList>\n            {stats.map(stat => (\n                <StatsItem\n                    key={stat.id} style={{\n                    backgroundColor: '#'+(Math.random()*0xFFFFFF<<0).toString(16)\n                    }}>\n                    <Label>{stat.label}</Label>\n                    <Percentage>{stat.percentage}%</Percentage>\n                </StatsItem>\n            ))}\n        </StatsList>\n    </Section>);\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired,\n    }),)\n}\n\nexport default Statistics;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    list-style: none;\n    padding: 0;\n    margin: 0;\n`;\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    border: 1px solid #DCDCDC;\n    max-width: 350px;\n    padding: 5px 15px;\n    box-shadow: 10px 5px 5px #DCDCDC;\n    margin: 10px;\n    border-radius: 5px;\n}\n`;\nexport const Status = styled.span`\n    width: 20px;\n    height: 20px;\n    background-color: ${props => {\n    if (props.itemprop) {\n        return 'green'; \n    }\n    return 'red';\n    }};\n    border-radius: 50%;\n    margin-right: 15px;\n`;\nexport const Avatar = styled.img`\n    margin-right: 15px;\n`;\nexport const Name = styled.p`\n    font-size: 24px;\n    margin-right: 15px;\n`;","import PropTypes from \"prop-types\";\nimport { List, Item, Status, Avatar, Name } from \"./FriendList.styled\";\n\nconst FriendList = ({ friends }) => {\n    return (\n    <List>\n        {friends.map(friend => (\n            <Item key={friend.id}>\n                <Status itemprop={friend.isOnline}></Status>\n                <Avatar src={friend.avatar} alt=\"User avatar\" width=\"48\" />\n                <Name>{friend.name}</Name>\n            </Item>\n        ))}\n    </List>\n)\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        avatar: PropTypes.string,\n        name: PropTypes.string,\n        // isOnline: PropTypes.bool,\n    }),)\n}\n\nexport default FriendList;","import styled from \"styled-components\";\n\nexport const Table = styled.table`\n    color: #686461;\n    border: 1px solid #DCDCDC;\n    border-radius: 5px;\n    width: 100%;\n    text-align: center;\n    text-transform: capitalize;\n`;\nexport const TableHead = styled.thead`\n    text-transform: uppercase;\n    color: #ffffff;\n    background-color: deepskyblue;\n    text-align: center;\n`;\nexport const TableHeadCaption = styled.th`\npadding: 10px;\n`;\nexport const Row = styled.tr`\npadding: 10px;\n:nth-child(odd) {\n  background-color: white;\n}\n:nth-child(even) {\n  background-color: #F0F8FF;\n}\n`;\nexport const Cell = styled.td`\npadding: 10px;\nborder-right: 1px solid #DCDCDC;\n`;","import PropTypes from \"prop-types\";\nimport { Table, TableHead, TableHeadCaption, Row, Cell } from \"./TransactionHistory.styled\";\n\nconst TransactionHistory = ({ items }) => {\n    return (\n    <Table>\n        <TableHead>\n            <tr>\n                <TableHeadCaption>Type</TableHeadCaption>\n                <TableHeadCaption>Amount</TableHeadCaption>\n                <TableHeadCaption>Currency</TableHeadCaption>\n            </tr>\n        </TableHead>\n        <tbody>\n            {items.map(item => (\n                <Row key={item.id}>\n                    <Cell>{item.type}</Cell>\n                    <Cell>{item.amount}</Cell>\n                    <Cell>{item.currency}</Cell>\n                </Row>\n            ))}\n        </tbody>\n</Table>\n)\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        amount: PropTypes.string,\n        currency: PropTypes.string,\n    }),)\n}\n\nexport default TransactionHistory;","import Profile from \"./components/Profile/Profile\";\nimport user from \"./components/Profile/user.json\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport data from \"./components/Statistics/data.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./components/FriendList/friends.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nexport default function App() {\n    return (\n        <div>\n            <Profile\n                username={user.username}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <Statistics\n                title=\"Upload stats\"\n                stats={data}\n            />\n            <Statistics\n                stats={data}\n            />\n            <FriendList friends={friends} />\n            <TransactionHistory items={transactions} />\n        </div>\n    );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    < App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}